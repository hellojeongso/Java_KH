
SELECT * FROM EMPLOYEES;
SELECT * FROM DEPARTMENTS;
SELECT * FROM LOCATIONS;
SELECT * FROM COUNTRIES;
SELECT * FROM REGIONS;
SELECT * FROM JOB_HISTORY;
SELECT * FROM JOBS;


--01. 사원의 FULL_NAME(FIRST_NAME + LAST_NAME) 과 이메일을 출력하라.
--(이메일@HR.COM 으로 출력하라.) 

SELECT FIRST_NAME || ' ' || LAST_NAME, EMAIL || '@HR.COM'
FROM EMPLOYEES;

SELECT CONCAT(FIRST_NAME, LAST_NAME), CONCAT(EMAIL, '@HR.COM')
FROM EMPLOYEES;

--02. 06년 이후에 입사한 사원의 이름(FIRST_NAME) 과 사원번호 (EMPLOYEE_ID)를 출력하라.
SELECT FIRST_NAME, EMPLOYEE_ID
FROM EMPLOYEES
WHERE HIRE_DATE >= '06/01/01';

--03. 사원의 이름(FIRST), 부서이름(DEPARTMENT_NAME), 부서가 있는 거리(STREET_ADDRESS), 부서가 있는 나라(COUNTRY_NAME) 를 출력하라.

SELECT FIRST_NAME, DEPARTMENT_NAME, STREET_ADDRESS, COUNTRY_NAME
FROM EMPLOYEES JOIN DEPARTMENTS USING(DEPARTMENT_ID)
	JOIN LOCATIONS USING(LOCATION_ID) -- 부서가 있는 거리 TABLE 조인 
	JOIN COUNTRIES USING(COUNTRY_ID); -- 부서가 있는 나라 TABLE 조인
	
-- ORACLE 
SELECT E.FIRST_NAME, D.DEPARTMENT_NAME, L.STREET_ADDRESS, C.COUNTRY_NAME
FROM EMPLOYEES E, DEPARTMENTS D, LOCATIONS L, COUNTRIES C
WHERE E.DEPARTMENT_ID = D.DEPARTMENT_ID
AND D.LOCATION_ID = L.LOCATION_ID
AND L.COUNTRY_ID = C.COUNTRY_ID;

--04. '부서번호가 90이고, 전화번호가 515로 시작하면서, 끝자리가 4567인 사원'이 관리하는 사원의 사번과 이름을 출력하라.

SELECT EMPLOYEE_ID, FIRST_NAME
FROM EMPLOYEES
WHERE MANAGER_ID = 
(SELECT EMPLOYEE_ID 
FROM EMPLOYEES
WHERE DEPARTMENT_ID = 90
AND PHONE_NUMBER LIKE '515.%.4567');

--SUBSTRING으로 번호를 잘라서 호출할 경우 코드
SELECT EMPLOYEE_ID, FIRST_NAME
FROM EMPLOYEES
WHERE MANAGER_ID = 
	(SELECT EMPLOYEE_ID 
	FROM EMPLOYEES
	WHERE DEPARTMENT_ID = 90
	AND SUBSTR(PHONE_NUMBER, 1, 3) = 515
	AND SUBSTR(PHONE_NUMBER, -4) = 4567);

	
--05. 성이 B로 시작하는 사원이 속한 부서의 부서번호와, B로 시작하는 사원의 수를 출력하라.
SELECT DEPARTMENT_ID, COUNT(*)
FROM EMPLOYEES
WHERE LAST_NAME LIKE 'B%'
GROUP BY DEPARTMENT_ID;


--06. (5번 확장) 성이 B로 시작하는 사원이 속한 부서의 부서이름과 사원의 수를 출력하라.
SELECT DEPARTMENT_NAME, COUNT(*)
FROM EMPLOYEES JOIN DEPARTMENTS USING(DEPARTMANT_ID)
WHERE DEPARTMENT_ID IN
	(SELECT DEPARTMENT_ID
	FROM EMPLOYEES
	WHERE LAST_NAME LIKE 'B%'
	GROUP BY DEPARTMENT_ID) -- B로 시작하는 사워들이 다니는 부서 
GROUP BY DEPARTMENT_NAME;

SELECT DEPARTMENT_NAME, COUNT(*)
FROM EMPLOYEES E, DEPARTMENTS D 
WHERE E.DEPARTMENT_ID = D.DEPARTMENT_ID
AND D.DEPARTMENT_ID IN
	(SELECT DEPARTMENT_ID
	FROM EMPLOYEES
	WHERE LAST_NAME LIKE 'B%'
	GROUP BY DEPARTMENT_ID)
GROUP BY D.EPARTMENT_NAME;



--07. IT 프로그래머(IT_PROG : JOB_ID)의 평균 월급보다 더 많은 평균월급을 받는 부서들의 직업 이름과(JOB_ID) 평균 월급을 출력하라.(월급을 내림차순으로 정렬하라.)
SELECT JOB_ID, AVG(SALARY)
FROM EMPLOYEES
HAVING AVG(SALARY) >
	(SELECT AVG(SALARY)
	FROM EMPLOYEES
	WHERE JOB_ID = 'IT_PROG')
GROUP BY JOB_ID
ORDER BY 2 DESC;


--08. 전화번호가 650.121.8009인 사원의 이름과, 사원이 속한 부서가 위치한 도시, 주소 를 출력하라.(이름 도시 주소)
SELECT FIRST_NAME,CITY,STREET_ADDRESS
FROM EMPLOYEES JOIN DEPARTMENTS USING(DEPARTMENT_ID)
	JOIN LOCATIONS USING(LOCATION_ID)
WHERE PHONE_NUMBER = '650.121.8009';

--오라클
SELECT E.FRIST_NAME, L.CITY, L.STREET_ADDRESS
FROM EMPLOYEES E, DEPARTMENTS D, LOCATIONS L
WHERE E.DEPARTMENT_ID = D.DEPARTMENT_ID
AND D.LOCATION_ID = L.LOCATION_ID
AND E.PHONE_NUMBER = '6540.121.8009';


--09. 캐나다에서 일하고 있는 사원의 이름과, 도시, 월급을 출력하라.
SELECT FIRST_NAME, CITY, SALARY
FROM EMPLOYEES JOIN DEPARTMENTS USING(DEPARTMENT_ID)
     JOIN LOCATIONS USING(LOCATION_ID)
     JOIN COUNTRIES USING(COUNTRY_ID)
WHERE COUNTRY_NAME = 'Canada';

SELECT E.FIRST_NAME, L.CITY, E.SALARY
FROM EMPLOYEES E, DEPARTMENTS D, LOCATIONS L, COUNTRIES C 
WHERE E.DEPARTMENT_ID = D.DEPARTMENT_ID
AND D.LOCATION_ID = L.LOCATION_ID
AND L.COUNTRY_ID = C.COUNTRY_ID
AND C.COUNTRY_NAME = 'Canada';

SELECT FIRST_NAME, CITY, SALARY
FROM EMPLOYEES JOIN DEPARTMENTS USING(DEPARTMENT_ID)
     JOIN LOCATIONS USING(LOCATION_ID)
WHERE COUNTRY_ID = 'CA';


--10. 이름이 Guy 인 사원과 같은 부서에서 일하면서, Guy와 직업(JOB_ID)이 다른 사원의 모든 것을 출력하라.
SELECT *
FROM EMPLOYEES
WHERE DEPARTMENT_ID =
	(SELECT DEPARTMENT_ID
	FROM EMPLOYEES
	WHERE FIRST_NAME = 'Guy')
AND JOB_ID !=
	(SELECT JOB_ID
	FROM EMPLOYEES
	WHERE FIRST_NAME = 'Guy');
	
--10. 이름이 Guy 인 사원과 같은 부서에서 일하면서, Guy와 직업(JOB_ID)이 같은 사원의 모든 것을 출력하라.
SELECT *
FROM EMPLOYEES
WHERE (DEPARTMENT_ID, JOB_ID) = 
	(SELECT DEPARTMENT_ID, JOB_ID
	FROM EMPLOYEES
	WHERE FRIST_NAME = 'Guy');
	

--11. 직책이 06년 7월 24일에 변경된 사원의 이름과, 과거 직업, 현재 직업을 출력하라.
SELECT * FROM JOB_HISTORY

SELECT FIRST_NAME, 과거.JOB_ID, 현재.JOB_ID
FROM EMPLOYEES 현재, 
	(SELECT EMPLOYEE_ID, JOB_ID
	FROM JOB_HISTORY
	WHERE END_DATE = '06/07/24') 과거 -- 과거라는 이름의 가상테이블 INLINE VIEW
WHERE 현재.EMPLOYEE_ID = 과거.EMPLOYEE_ID;

--12. 관리자가 없는 부서의 이름과 부서번호를 출력하라.
SELECT JOB_ID, DEPARTMENT_ID FROM EMPLOYEES
WHERE MANAGER_ID IS NULL;

SELECT DEPARTMENT_NAME, DEPARTMENT_ID
FROM DEPARTMENTS
WHERE MANAGER_ID IS NULL;


--13. 조인 키워드를 사용하지 않고, IT 부서 관리자의 성(LAST_NAME)과, 월급을 출력하라.
SELECT LAST_NAME, SALARY 
FROM EMPLOYEES
WHERE EMPLOYEE_ID = 
	(SELECT MANAGER_ID
	FROM DEPARTMENTS
	WHERE DEPARTMENT_NAME = 'IT');

--14. ROWNUM을 사용하여, 관리자가 존재하는 부서의 장소 중 가장 많은 장소의 도시 이름을 출력하라.
SELECT CITY, CNT, ROWNUM
FROM
	(SELECT CITY, COUNT(*) AS CNT
	FROM DEPARTMENTS JOIN LOCATIONS USING(LOCATION_ID)
	WHERE DEPARTMENT_ID IN
	(SELECT DEPARTMENT_ID 
	FROM DEPARTMENTS
	WHERE MANAGER_ID IS NOT NULL) -- 관리자가 존재하는 부서 
	GROUP BY CITY
	ORDER BY COUNT(*) DESC) A;  
WHERE ROWNUM = 1;

--15. 18년도가 근속 10주년인 사원의 이름과 입사일을 출력하라.

SELECT FIRST_NAME, HIRE_DATE
FROM EMPLOYEES
WHERE SUBSTR(ADD_MONTHS(HIRE_DATE, 120), 1, 2) = 18;

SELECT FIRST_NAME,

-- 연습
SELECT DEPARTMENT_ID, FIRST_NAME, SALARY FROM EMPLOYEES
WHERE SALARY < ALL (SELECT AVG(SALARY) FROM WHERE DEPARTMENT_ID = 100)
ORDER BY SALARY DESC;


SELECT EMPLOYEE_ID, FIRST_NAME||' '||LAST_NAME, JOB_ID, SALARY, DEPARTMENT_ID
FROM EMPLOYEES
WHERE SALARY < (SELECT FLOOR(AVG(SALARY)) FROM EMPLOYEES)
ORDER BY SALARY DESC;

SELECT LAST_NAME, JOB_ID, DEPARTMENT_NAME
FROM (  SELECT LAST_NAME, JOB_ID, DEPARTMENT_ID
        FROM EMPLOYEES
        WHERE JOB_ID='SA_MAN') A LEFT JOIN DEPARTMENTS B
    ON A.DEPARTMENT_ID=B.DEPARTMENT_ID;

    SELECT E.LAST_NAME, E.JOB_ID, D.DEPARTMENT_NAME, D.LOCATION_ID
FROM EMPLOYEES E LEFT JOIN DEPARTMENTS D USING(DEPARTMENT_ID)
WHERE E.JOB_ID='SA_MAN'
ORDER BY E.LAST_NAME ASC;

SELECT 
       CONCAT(TO_CHAR(E.HIRE_DATE, 'MM'), '월') AS HIRE_DATE, COUNT(*)
  FROM EMPLOYEES E
  GROUP BY TO_CHAR(E.HIRE_DATE, 'MM')
  ORDER BY TO_CHAR(E.HIRE_DATE, 'MM') ASC
;  

SELECT  L.CITY
FROM    LOCATIONS L
WHERE   L.LOCATION_ID IN (
                                SELECT  D.LOCATION_ID
                                FROM    DEPARTMENTS D
                             )
;

SELECT  *
FROM    (
            SELECT  *
            FROM    EMPLOYEES 
            WHERE   HIRE_DATE < (
                                    SELECT  HIRE_DATE
                                    FROM    EMPLOYEES
                                    WHERE   EMPLOYEE_ID = 205
                                )
            ORDER   BY  HIRE_DATE DESC
        ) 
WHERE   ROWNUM = 1
;